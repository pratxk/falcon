{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-05T11:01:55.875Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-05T11:01:55.878Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-05T11:02:48.497Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-05T11:02:48.514Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-05T11:09:03.636Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-05T11:09:03.653Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T07:13:28.809Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T07:13:28.812Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T07:55:37.239Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T07:55:37.254Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T07:56:54.421Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T07:56:54.425Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T07:59:16.558Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T07:59:16.560Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T08:00:14.574Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T08:00:14.576Z"}
{"level":"info","message":"User logged in: admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T08:09:22.795Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T08:24:16.282Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T10:09:32.984Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T10:09:32.987Z"}
{"level":"info","message":"User logged in: admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T10:23:09.774Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T10:45:19.821Z"}
{"level":"info","message":"User logged in: admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T10:47:43.235Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T10:54:33.118Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T10:54:33.129Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T11:11:52.802Z"}
{"level":"info","message":"User logged in: admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T11:12:16.778Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T11:12:21.996Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T11:12:24.175Z"}
{"level":"info","message":"User logged in: admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T11:12:46.648Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T11:16:05.419Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T11:16:05.428Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T11:16:05.445Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T11:17:28.333Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T11:17:28.839Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T11:17:59.209Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T11:18:01.572Z"}
{"level":"info","message":"User logged in: admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T11:19:10.142Z"}
{"level":"info","message":"User logged in: admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T11:19:20.957Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T11:20:00.082Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T11:20:00.114Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T11:20:00.148Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:26:04.650Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:26:04.664Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:26:12.990Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:26:13.017Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:26:23.802Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:26:23.804Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:26:33.057Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:26:33.062Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:26:38.720Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:26:38.724Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:26:45.995Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:26:45.998Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:26:57.883Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:26:57.887Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:27:20.079Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:27:20.083Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:27:26.362Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:27:26.366Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:27:31.882Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:27:31.886Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:27:42.846Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:27:42.848Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:27:54.312Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:27:54.316Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:28:06.824Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:28:06.830Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:28:17.398Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:28:17.401Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:28:24.706Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:28:24.709Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:28:31.493Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:28:31.495Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:29:01.095Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:29:01.098Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:29:07.297Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:29:07.300Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:29:13.537Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:29:13.541Z"}
{"clientVersion":"6.11.1","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","name":"PrismaClientInitializationError","service":"drone-management-api","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7759)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T11:44:21.653Z"}
{"clientVersion":"6.11.1","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","name":"PrismaClientInitializationError","service":"drone-management-api","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7759)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T11:44:21.680Z"}
{"clientVersion":"6.11.1","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","name":"PrismaClientInitializationError","service":"drone-management-api","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7759)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T11:44:31.295Z"}
{"level":"info","message":"User logged in: admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T11:44:44.483Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:55:17.409Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:55:17.424Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T11:55:26.249Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T11:55:30.431Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:55:30.538Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:55:30.538Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T11:55:33.473Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T11:55:39.200Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:55:39.328Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:55:39.328Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T11:56:10.199Z"}
{"clientVersion":"6.11.1","errorCode":"P1001","level":"error","message":"Database connection attempt 1 failed: Can't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","name":"PrismaClientInitializationError","service":"drone-management-api","stack":"PrismaClientInitializationError: Can't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at r (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:112:2770)\n    at DatabaseService.connect (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\utils\\database.ts:65:7)\n    at startServer (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\server.ts:31:20)","timestamp":"2025-07-06T11:56:15.346Z"}
{"level":"info","message":"Retrying database connection in 2000ms...","service":"drone-management-api","timestamp":"2025-07-06T11:56:15.348Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T11:56:17.233Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T11:56:22.089Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:56:22.195Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:56:22.195Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T11:57:34.602Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T11:57:38.868Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:57:39.016Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:57:39.017Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T11:58:56.110Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T11:59:00.420Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:59:00.517Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:59:00.520Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T11:59:32.721Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T11:59:37.759Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:59:37.905Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:59:37.906Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T11:59:43.473Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T11:59:49.075Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T11:59:49.186Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T11:59:49.187Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T11:59:54.788Z"}
{"clientVersion":"6.11.1","errorCode":"P1001","level":"error","message":"Database connection attempt 1 failed: Can't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","name":"PrismaClientInitializationError","service":"drone-management-api","stack":"PrismaClientInitializationError: Can't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at r (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:112:2770)\n    at DatabaseService.connect (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\utils\\database.ts:65:7)\n    at startServer (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\server.ts:31:20)","timestamp":"2025-07-06T11:59:59.829Z"}
{"level":"info","message":"Retrying database connection in 2000ms...","service":"drone-management-api","timestamp":"2025-07-06T11:59:59.831Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:00:01.843Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T12:00:06.497Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T12:00:06.629Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T12:00:06.630Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:00:11.537Z"}
{"clientVersion":"6.11.1","errorCode":"P1001","level":"error","message":"Database connection attempt 1 failed: Can't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","name":"PrismaClientInitializationError","service":"drone-management-api","stack":"PrismaClientInitializationError: Can't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at r (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:112:2770)\n    at DatabaseService.connect (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\utils\\database.ts:65:7)\n    at startServer (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\server.ts:31:20)","timestamp":"2025-07-06T12:00:16.581Z"}
{"level":"info","message":"Retrying database connection in 2000ms...","service":"drone-management-api","timestamp":"2025-07-06T12:00:16.582Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:00:18.592Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:00:22.909Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T12:00:27.978Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T12:00:28.082Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T12:00:28.083Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:00:32.221Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T12:00:36.092Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T12:00:36.174Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T12:00:36.175Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:00:42.306Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T12:00:47.559Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T12:00:47.660Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T12:00:47.660Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:00:50.783Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T12:00:56.095Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T12:00:56.208Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T12:00:56.208Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:00:59.635Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T12:01:04.432Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T12:01:04.511Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T12:01:04.512Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:01:09.779Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:01:15.570Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T12:01:18.875Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T12:01:18.976Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T12:01:18.977Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:01:20.012Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:01:25.206Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T12:01:29.744Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T12:01:29.847Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T12:01:29.848Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:01:31.731Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T12:01:36.646Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T12:01:36.647Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T12:01:36.647Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:36.664Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:36.665Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:36.666Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:36.732Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:36.733Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:36.734Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:36.842Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:36.843Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:36.843Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:37.000Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:37.001Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:37.001Z"}
{"level":"error","message":"Redis connection attempt 1 failed: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.","service":"drone-management-api","stack":"MaxRetriesPerRequestError: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.\n    at Socket.<anonymous> (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\ioredis\\built\\redis\\event_handler.js:182:37)\n    at Object.onceWrapper (node:events:622:26)\n    at Socket.emit (node:events:507:28)\n    at TCP.<anonymous> (node:net:346:12)","timestamp":"2025-07-06T12:01:37.003Z"}
{"level":"info","message":"Retrying Redis connection in 2000ms...","service":"drone-management-api","timestamp":"2025-07-06T12:01:37.003Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:37.207Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:37.208Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:37.208Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:37.464Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:37.465Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:37.465Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:37.780Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:37.781Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:37.781Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:01:38.991Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:01:42.785Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T12:01:46.582Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T12:01:46.583Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T12:01:46.583Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:46.601Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:46.603Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:46.604Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:46.669Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:46.670Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:46.670Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:46.781Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:46.782Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:46.782Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:46.941Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:46.943Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:46.943Z"}
{"level":"error","message":"Redis connection attempt 1 failed: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.","service":"drone-management-api","stack":"MaxRetriesPerRequestError: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.\n    at Socket.<anonymous> (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\ioredis\\built\\redis\\event_handler.js:182:37)\n    at Object.onceWrapper (node:events:622:26)\n    at Socket.emit (node:events:507:28)\n    at TCP.<anonymous> (node:net:346:12)","timestamp":"2025-07-06T12:01:46.951Z"}
{"level":"info","message":"Retrying Redis connection in 2000ms...","service":"drone-management-api","timestamp":"2025-07-06T12:01:46.952Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:47.148Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:47.149Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:47.149Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:47.403Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:47.404Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:47.404Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:47.707Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:47.707Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:47.708Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:48.071Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:48.072Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:48.072Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:48.486Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:48.487Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:48.487Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:48.947Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:48.948Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:48.948Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T12:01:48.962Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T12:01:48.963Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:48.965Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:48.965Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:48.965Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:49.026Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:49.027Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:49.027Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:49.138Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:49.139Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:49.139Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:49.298Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:49.299Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:49.299Z"}
{"level":"error","message":"Redis connection attempt 2 failed: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.","service":"drone-management-api","stack":"MaxRetriesPerRequestError: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.\n    at Socket.<anonymous> (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\ioredis\\built\\redis\\event_handler.js:182:37)\n    at Object.onceWrapper (node:events:622:26)\n    at Socket.emit (node:events:507:28)\n    at TCP.<anonymous> (node:net:346:12)","timestamp":"2025-07-06T12:01:49.300Z"}
{"level":"info","message":"Retrying Redis connection in 2000ms...","service":"drone-management-api","timestamp":"2025-07-06T12:01:49.300Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:49.459Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:49.459Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:49.460Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:49.507Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:49.507Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:49.507Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:49.761Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:49.762Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:49.762Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:50.018Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:50.019Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:50.020Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:50.066Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:50.067Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:50.067Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:50.432Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:50.433Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:50.434Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:50.623Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:50.624Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:50.624Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:50.846Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:50.847Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:50.848Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:51.277Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.278Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.278Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.308Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.309Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:51.310Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.310Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.311Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:51.311Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.312Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.312Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:51.373Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.373Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.373Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:51.485Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.486Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.486Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:51.644Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.645Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.645Z"}
{"level":"error","message":"Redis connection attempt 3 failed: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.","service":"drone-management-api","stack":"MaxRetriesPerRequestError: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.\n    at Socket.<anonymous> (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\ioredis\\built\\redis\\event_handler.js:182:37)\n    at Object.onceWrapper (node:events:622:26)\n    at Socket.emit (node:events:507:28)\n    at TCP.<anonymous> (node:net:346:12)","timestamp":"2025-07-06T12:01:51.646Z"}
{"level":"info","message":"Retrying Redis connection in 2000ms...","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.647Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:51.819Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.819Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.819Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:51.851Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.852Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.852Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:51.993Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.994Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:51.994Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:52.105Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:52.105Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:52.106Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:52.376Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:52.377Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:52.377Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:52.408Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:52.409Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:52.409Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:52.760Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:52.761Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:52.762Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:52.763Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:52.763Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:52.764Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:52.983Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:52.984Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:52.984Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:53.176Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.177Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.177Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:53.574Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.575Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.575Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:53.637Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:53.638Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.639Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.639Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.639Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.640Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.653Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.653Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:53.655Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.656Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.656Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:53.716Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.717Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.717Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:53.829Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.831Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.832Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:53.988Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.989Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.989Z"}
{"level":"error","message":"Redis connection attempt 4 failed: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.","service":"drone-management-api","stack":"MaxRetriesPerRequestError: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.\n    at Socket.<anonymous> (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\ioredis\\built\\redis\\event_handler.js:182:37)\n    at Object.onceWrapper (node:events:622:26)\n    at Socket.emit (node:events:507:28)\n    at TCP.<anonymous> (node:net:346:12)","timestamp":"2025-07-06T12:01:53.990Z"}
{"level":"info","message":"Retrying Redis connection in 2000ms...","service":"drone-management-api","timestamp":"2025-07-06T12:01:53.990Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:54.146Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:54.147Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:54.147Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:54.194Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:54.195Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:54.195Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:54.354Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:54.355Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:54.355Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:54.434Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:54.435Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:54.435Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:54.450Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:54.451Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:54.452Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:54.706Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:54.707Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:54.707Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:54.752Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:54.753Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:54.753Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:55.119Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.120Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.120Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:55.120Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.121Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.121Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:55.310Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.310Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.311Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:55.341Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.342Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.342Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:55.530Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.530Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.531Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:55.927Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.927Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.928Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:55.975Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.975Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.976Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.990Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.991Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:55.992Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.993Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.993Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:55.993Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.994Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:55.994Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:56.055Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:56.056Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:56.056Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:56.167Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:56.168Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:56.168Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:56.296Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:01:56.296Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:01:56.297Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:01:56.326Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:03:45.575Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T12:03:49.910Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T12:03:49.911Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T12:03:49.912Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:49.936Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:49.938Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:49.938Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:50.008Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:50.013Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:50.014Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:50.128Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:50.129Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:50.130Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:50.284Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:50.285Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:50.286Z"}
{"level":"error","message":"Redis connection attempt 1 failed: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.","service":"drone-management-api","stack":"MaxRetriesPerRequestError: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.\n    at Socket.<anonymous> (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\ioredis\\built\\redis\\event_handler.js:182:37)\n    at Object.onceWrapper (node:events:622:26)\n    at Socket.emit (node:events:507:28)\n    at TCP.<anonymous> (node:net:346:12)","timestamp":"2025-07-06T12:03:50.299Z"}
{"level":"info","message":"Retrying Redis connection in 2000ms...","service":"drone-management-api","timestamp":"2025-07-06T12:03:50.301Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:50.488Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:50.489Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:50.489Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:50.741Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:50.742Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:50.743Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:51.054Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:51.055Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:51.055Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:51.414Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:51.415Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:51.415Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:51.826Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:51.827Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:51.827Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:52.282Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.283Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.283Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.313Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.314Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:52.317Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.318Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.318Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:52.379Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.380Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.380Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:52.486Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.487Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.487Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:52.644Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.645Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.645Z"}
{"level":"error","message":"Redis connection attempt 2 failed: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.","service":"drone-management-api","stack":"MaxRetriesPerRequestError: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.\n    at Socket.<anonymous> (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\ioredis\\built\\redis\\event_handler.js:182:37)\n    at Object.onceWrapper (node:events:622:26)\n    at Socket.emit (node:events:507:28)\n    at TCP.<anonymous> (node:net:346:12)","timestamp":"2025-07-06T12:03:52.646Z"}
{"level":"info","message":"Retrying Redis connection in 2000ms...","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.647Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:52.787Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.788Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.788Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:52.851Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.852Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:52.852Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:53.117Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:53.118Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:53.118Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:53.349Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:53.350Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:53.351Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:53.429Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:53.430Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:53.430Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:53.794Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:53.795Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:53.795Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:53.966Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:53.967Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:53.967Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:54.207Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.208Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.208Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:54.630Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.632Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.638Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.661Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.662Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:54.665Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.666Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.666Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:54.666Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.667Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.668Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:54.725Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.726Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.726Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:54.836Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.837Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.837Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:54.992Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.994Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.994Z"}
{"level":"error","message":"Redis connection attempt 3 failed: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.","service":"drone-management-api","stack":"MaxRetriesPerRequestError: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.\n    at Socket.<anonymous> (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\ioredis\\built\\redis\\event_handler.js:182:37)\n    at Object.onceWrapper (node:events:622:26)\n    at Socket.emit (node:events:507:28)\n    at TCP.<anonymous> (node:net:346:12)","timestamp":"2025-07-06T12:03:54.996Z"}
{"level":"info","message":"Retrying Redis connection in 2000ms...","service":"drone-management-api","timestamp":"2025-07-06T12:03:54.997Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:55.181Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:55.182Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:55.182Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:55.197Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:55.198Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:55.198Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:55.339Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:55.340Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:55.340Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:55.451Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:55.452Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:55.452Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:55.735Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:55.735Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:55.736Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:55.767Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:55.768Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:55.768Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:56.094Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:56.094Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:56.095Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:56.126Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:56.127Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:56.127Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:56.344Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:56.345Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:56.345Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:56.533Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:56.535Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:56.535Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:56.907Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:56.908Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:56.908Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.000Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.001Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:57.003Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:57.004Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.005Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.005Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.005Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.005Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:57.006Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.007Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.008Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:57.063Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.064Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.064Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:57.174Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.175Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.175Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:57.329Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.330Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.330Z"}
{"level":"error","message":"Redis connection attempt 4 failed: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.","service":"drone-management-api","stack":"MaxRetriesPerRequestError: Reached the max retries per request limit (which is 3). Refer to \"maxRetriesPerRequest\" option for details.\n    at Socket.<anonymous> (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\ioredis\\built\\redis\\event_handler.js:182:37)\n    at Object.onceWrapper (node:events:622:26)\n    at Socket.emit (node:events:507:28)\n    at TCP.<anonymous> (node:net:346:12)","timestamp":"2025-07-06T12:03:57.331Z"}
{"level":"info","message":"Retrying Redis connection in 2000ms...","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.331Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:57.519Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.520Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.520Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:57.536Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.536Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.537Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:57.711Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.711Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.712Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:57.775Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.775Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.776Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:57.790Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.791Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:57.792Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:58.076Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:58.079Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:58.080Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:58.093Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:58.094Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:58.094Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:58.455Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:58.456Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:58.456Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:58.471Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:58.472Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:58.472Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:58.693Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:58.693Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:58.694Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:58.694Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:58.695Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:58.695Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:58.866Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:58.867Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:58.868Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:59.290Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:59.295Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:59.296Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T12:03:59.333Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T12:03:59.334Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:59.335Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:59.338Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:59.338Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:59.339Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:59.340Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:59.340Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:59.346Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:59.351Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:59.354Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:59.394Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:59.395Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:59.396Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:59.505Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:59.506Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:59.506Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:59.658Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T12:03:59.659Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T12:03:59.660Z"}
{"address":"127.0.0.1","code":"ECONNREFUSED","errno":-4078,"level":"error","message":"Redis connection error: connect ECONNREFUSED 127.0.0.1:6379","port":6379,"service":"drone-management-api","stack":"Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)","syscall":"connect","timestamp":"2025-07-06T12:03:59.660Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:05:18.178Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:05:22.828Z"}
{"clientVersion":"6.11.1","errorCode":"P1001","level":"error","message":"Database connection attempt 1 failed: Can't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","name":"PrismaClientInitializationError","service":"drone-management-api","stack":"PrismaClientInitializationError: Can't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at r (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:112:2770)\n    at DatabaseService.connect (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\utils\\database.ts:65:7)\n    at startServer (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\server.ts:31:20)","timestamp":"2025-07-06T12:05:27.882Z"}
{"level":"info","message":"Retrying database connection in 2000ms...","service":"drone-management-api","timestamp":"2025-07-06T12:05:27.884Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:05:29.899Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:05:31.717Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T12:05:35.167Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T12:05:40.991Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T12:05:40.992Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T12:05:40.992Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T12:05:42.155Z"}
{"level":"info","message":"Redis is ready","service":"drone-management-api","timestamp":"2025-07-06T12:05:42.846Z"}
{"level":"info","message":"Redis connection test successful","service":"drone-management-api","timestamp":"2025-07-06T12:05:43.533Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T12:05:43.632Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T12:05:43.634Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T12:13:36.320Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T12:13:36.352Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T12:13:36.353Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T12:13:36.353Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T12:13:36.355Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T12:13:36.355Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T12:13:36.356Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T12:13:36.356Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T12:13:36.357Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T12:13:36.358Z"}
{"code":"ECONNRESET","errno":-4077,"level":"error","message":"Redis connection error: read ECONNRESET","service":"drone-management-api","stack":"Error: read ECONNRESET\n    at TLSWrap.onStreamRead (node:internal/stream_base_commons:216:20)","syscall":"read","timestamp":"2025-07-06T15:27:02.793Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T15:27:02.919Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T15:27:02.930Z"}
{"code":"ETIMEDOUT","errorno":"ETIMEDOUT","level":"error","message":"Redis connection error: connect ETIMEDOUT","service":"drone-management-api","stack":"Error: connect ETIMEDOUT\n    at TLSSocket.<anonymous> (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\ioredis\\built\\Redis.js:170:41)\n    at Object.onceWrapper (node:events:621:28)\n    at TLSSocket.emit (node:events:507:28)\n    at TLSSocket.Socket._onTimeout (node:net:604:8)\n    at listOnTimeout (node:internal/timers:608:17)\n    at processTimers (node:internal/timers:543:7)","syscall":"connect","timestamp":"2025-07-06T15:27:13.162Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T15:27:13.164Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T15:27:13.166Z"}
{"code":"ENOTFOUND","errno":-3008,"hostname":"massive-dog-55605.upstash.io","level":"error","message":"Redis connection error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io","service":"drone-management-api","stack":"Error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:111:26)","syscall":"getaddrinfo","timestamp":"2025-07-06T15:27:14.423Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T15:27:14.425Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T15:27:14.428Z"}
{"code":"ETIMEDOUT","errorno":"ETIMEDOUT","level":"error","message":"Redis connection error: connect ETIMEDOUT","service":"drone-management-api","stack":"Error: connect ETIMEDOUT\n    at TLSSocket.<anonymous> (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\ioredis\\built\\Redis.js:170:41)\n    at Object.onceWrapper (node:events:621:28)\n    at TLSSocket.emit (node:events:507:28)\n    at TLSSocket.Socket._onTimeout (node:net:604:8)\n    at listOnTimeout (node:internal/timers:608:17)\n    at processTimers (node:internal/timers:543:7)","syscall":"connect","timestamp":"2025-07-06T15:27:24.605Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T15:27:24.606Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T15:27:24.607Z"}
{"code":"ENOTFOUND","errno":-3008,"hostname":"massive-dog-55605.upstash.io","level":"error","message":"Redis connection error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io","service":"drone-management-api","stack":"Error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:111:26)","syscall":"getaddrinfo","timestamp":"2025-07-06T15:27:25.874Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T15:27:25.875Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T15:27:25.876Z"}
{"code":"ETIMEDOUT","errorno":"ETIMEDOUT","level":"error","message":"Redis connection error: connect ETIMEDOUT","service":"drone-management-api","stack":"Error: connect ETIMEDOUT\n    at TLSSocket.<anonymous> (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\ioredis\\built\\Redis.js:170:41)\n    at Object.onceWrapper (node:events:621:28)\n    at TLSSocket.emit (node:events:507:28)\n    at TLSSocket.Socket._onTimeout (node:net:604:8)\n    at listOnTimeout (node:internal/timers:608:17)\n    at processTimers (node:internal/timers:543:7)","syscall":"connect","timestamp":"2025-07-06T15:27:36.149Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T15:27:36.150Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T15:27:36.152Z"}
{"code":"ENOTFOUND","errno":-3008,"hostname":"massive-dog-55605.upstash.io","level":"error","message":"Redis connection error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io","service":"drone-management-api","stack":"Error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:111:26)","syscall":"getaddrinfo","timestamp":"2025-07-06T15:27:37.437Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T15:27:37.438Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T15:27:37.441Z"}
{"code":"ETIMEDOUT","errorno":"ETIMEDOUT","level":"error","message":"Redis connection error: connect ETIMEDOUT","service":"drone-management-api","stack":"Error: connect ETIMEDOUT\n    at TLSSocket.<anonymous> (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\ioredis\\built\\Redis.js:170:41)\n    at Object.onceWrapper (node:events:621:28)\n    at TLSSocket.emit (node:events:507:28)\n    at TLSSocket.Socket._onTimeout (node:net:604:8)\n    at listOnTimeout (node:internal/timers:608:17)\n    at processTimers (node:internal/timers:543:7)","syscall":"connect","timestamp":"2025-07-06T15:27:47.807Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T15:27:47.808Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T15:27:47.809Z"}
{"code":"ENOTFOUND","errno":-3008,"hostname":"massive-dog-55605.upstash.io","level":"error","message":"Redis connection error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io","service":"drone-management-api","stack":"Error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:111:26)","syscall":"getaddrinfo","timestamp":"2025-07-06T15:27:49.080Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T15:27:49.081Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T15:27:49.082Z"}
{"code":"ETIMEDOUT","errorno":"ETIMEDOUT","level":"error","message":"Redis connection error: connect ETIMEDOUT","service":"drone-management-api","stack":"Error: connect ETIMEDOUT\n    at TLSSocket.<anonymous> (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\ioredis\\built\\Redis.js:170:41)\n    at Object.onceWrapper (node:events:621:28)\n    at TLSSocket.emit (node:events:507:28)\n    at TLSSocket.Socket._onTimeout (node:net:604:8)\n    at listOnTimeout (node:internal/timers:608:17)\n    at processTimers (node:internal/timers:543:7)","syscall":"connect","timestamp":"2025-07-06T15:27:59.536Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T15:27:59.537Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T15:27:59.537Z"}
{"code":"ENOTFOUND","errno":-3008,"hostname":"massive-dog-55605.upstash.io","level":"error","message":"Redis connection error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io","service":"drone-management-api","stack":"Error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:111:26)","syscall":"getaddrinfo","timestamp":"2025-07-06T15:28:00.823Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T15:28:00.824Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T15:28:00.824Z"}
{"code":"ETIMEDOUT","errorno":"ETIMEDOUT","level":"error","message":"Redis connection error: connect ETIMEDOUT","service":"drone-management-api","stack":"Error: connect ETIMEDOUT\n    at TLSSocket.<anonymous> (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\ioredis\\built\\Redis.js:170:41)\n    at Object.onceWrapper (node:events:621:28)\n    at TLSSocket.emit (node:events:507:28)\n    at TLSSocket.Socket._onTimeout (node:net:604:8)\n    at listOnTimeout (node:internal/timers:608:17)\n    at processTimers (node:internal/timers:543:7)","syscall":"connect","timestamp":"2025-07-06T15:28:11.395Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T15:28:11.397Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T15:28:11.397Z"}
{"code":"ENOTFOUND","errno":-3008,"hostname":"massive-dog-55605.upstash.io","level":"error","message":"Redis connection error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io","service":"drone-management-api","stack":"Error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:111:26)","syscall":"getaddrinfo","timestamp":"2025-07-06T15:28:12.683Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T15:28:12.684Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T15:28:12.685Z"}
{"code":"ETIMEDOUT","errorno":"ETIMEDOUT","level":"error","message":"Redis connection error: connect ETIMEDOUT","service":"drone-management-api","stack":"Error: connect ETIMEDOUT\n    at TLSSocket.<anonymous> (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\ioredis\\built\\Redis.js:170:41)\n    at Object.onceWrapper (node:events:621:28)\n    at TLSSocket.emit (node:events:507:28)\n    at TLSSocket.Socket._onTimeout (node:net:604:8)\n    at listOnTimeout (node:internal/timers:608:17)\n    at processTimers (node:internal/timers:543:7)","syscall":"connect","timestamp":"2025-07-06T16:32:23.994Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T16:32:23.996Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T16:32:23.997Z"}
{"code":"ENOTFOUND","errno":-3008,"hostname":"massive-dog-55605.upstash.io","level":"error","message":"Redis connection error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io","service":"drone-management-api","stack":"Error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:111:26)","syscall":"getaddrinfo","timestamp":"2025-07-06T16:32:24.726Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T16:32:24.729Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T16:32:24.729Z"}
{"code":"ENOTFOUND","errno":-3008,"hostname":"massive-dog-55605.upstash.io","level":"error","message":"Redis connection error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io","service":"drone-management-api","stack":"Error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:111:26)","syscall":"getaddrinfo","timestamp":"2025-07-06T16:32:25.494Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T16:32:25.494Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T16:32:25.495Z"}
{"code":"ENOTFOUND","errno":-3008,"hostname":"massive-dog-55605.upstash.io","level":"error","message":"Redis connection error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io","service":"drone-management-api","stack":"Error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:111:26)","syscall":"getaddrinfo","timestamp":"2025-07-06T16:32:26.309Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T16:32:26.310Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T16:32:26.310Z"}
{"code":"ENOTFOUND","errno":-3008,"hostname":"massive-dog-55605.upstash.io","level":"error","message":"Redis connection error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io","service":"drone-management-api","stack":"Error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:111:26)","syscall":"getaddrinfo","timestamp":"2025-07-06T16:32:27.497Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T16:32:27.498Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T16:32:27.499Z"}
{"code":"ENOTFOUND","errno":-3008,"hostname":"massive-dog-55605.upstash.io","level":"error","message":"Redis connection error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io","service":"drone-management-api","stack":"Error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:111:26)","syscall":"getaddrinfo","timestamp":"2025-07-06T16:32:28.410Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T16:32:28.410Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T16:32:28.411Z"}
{"code":"ENOTFOUND","errno":-3008,"hostname":"massive-dog-55605.upstash.io","level":"error","message":"Redis connection error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io","service":"drone-management-api","stack":"Error: getaddrinfo ENOTFOUND massive-dog-55605.upstash.io\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:111:26)","syscall":"getaddrinfo","timestamp":"2025-07-06T16:32:29.506Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T16:32:29.509Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T16:32:29.510Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T16:32:31.465Z"}
{"level":"info","message":"Redis is ready","service":"drone-management-api","timestamp":"2025-07-06T16:32:32.260Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T16:35:08.322Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\auth\\auth.ts:97:48\n\n  94 ) => {\n  95   try {\n  96     // Find user\nâ†’ 97     const user = await context.prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"user.findUnique","timestamp":"2025-07-06T16:36:27.471Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Login error: \nInvalid `context.prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\auth\\auth.ts:97:48\n\n  94 ) => {\n  95   try {\n  96     // Find user\nâ†’ 97     const user = await context.prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `context.prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\auth\\auth.ts:97:48\n\n  94 ) => {\n  95   try {\n  96     // Find user\nâ†’ 97     const user = await context.prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at Object.login (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\auth\\auth.ts:97:22)","timestamp":"2025-07-06T16:36:27.477Z"}
{"level":"info","message":"User logged in: admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T16:38:12.539Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.mission.findMany()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:30:53\n\n  27   whereClause.status = status;\n  28 }\n  29 \nâ†’ 30 const missions = await context.prisma.mission.findMany(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"mission.findMany","timestamp":"2025-07-06T16:46:30.728Z"}
{"level":"info","message":"Drone status updated: cmcq4so8w000oujt4m93nyh0x to IN_MISSION by admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T17:21:23.102Z"}
{"level":"info","message":"Drone status updated: cmcq4so8w000oujt4m93nyh0x to AVAILABLE by admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T17:21:40.981Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.organizationMember.findMany()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\users\\user.ts:261:54\n\n  258 \n  259 User: {\n  260   organizationMemberships: async (parent: any, _args: any, context: Context) => {\nâ†’ 261     return await context.prisma.organizationMember.findMany(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"organizationMember.findMany","timestamp":"2025-07-06T17:26:01.486Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.organizationMember.findMany()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\users\\user.ts:261:54\n\n  258 \n  259 User: {\n  260   organizationMemberships: async (parent: any, _args: any, context: Context) => {\nâ†’ 261     return await context.prisma.organizationMember.findMany(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"organizationMember.findMany","timestamp":"2025-07-06T17:26:01.503Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.organizationMember.findMany()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\users\\user.ts:261:54\n\n  258 \n  259 User: {\n  260   organizationMemberships: async (parent: any, _args: any, context: Context) => {\nâ†’ 261     return await context.prisma.organizationMember.findMany(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"organizationMember.findMany","timestamp":"2025-07-06T17:26:01.506Z"}
{"code":"ECONNRESET","errno":-4077,"level":"error","message":"Redis connection error: read ECONNRESET","service":"drone-management-api","stack":"Error: read ECONNRESET\n    at TLSWrap.onStreamRead (node:internal/stream_base_commons:216:20)","syscall":"read","timestamp":"2025-07-06T17:27:50.770Z"}
{"level":"warn","message":"Redis connection closed","service":"drone-management-api","timestamp":"2025-07-06T17:27:50.782Z"}
{"level":"info","message":"Redis reconnecting...","service":"drone-management-api","timestamp":"2025-07-06T17:27:50.783Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T17:27:51.852Z"}
{"level":"info","message":"Redis is ready","service":"drone-management-api","timestamp":"2025-07-06T17:27:52.826Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.user.findMany()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\users\\user.ts:32:40\n\n  29   requireRole(context, ['SUPER_ADMIN']);\n  30 }\n  31 \nâ†’ 32 return await context.prisma.user.findMany(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"user.findMany","timestamp":"2025-07-06T17:28:02.289Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.drone.findMany()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\drone\\index.ts:28:49\n\n  25   return cached;\n  26 }\n  27 \nâ†’ 28 const drones = await context.prisma.drone.findMany(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"drone.findMany","timestamp":"2025-07-06T17:28:03.789Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.site.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:728:40\n\n  725 },\n  726 \n  727 site: async (parent: any, _args: any, context: Context) => {\nâ†’ 728   return await context.prisma.site.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"site.findUnique","timestamp":"2025-07-06T17:28:06.299Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.site.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:728:40\n\n  725 },\n  726 \n  727 site: async (parent: any, _args: any, context: Context) => {\nâ†’ 728   return await context.prisma.site.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"site.findUnique","timestamp":"2025-07-06T17:28:06.302Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.site.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:728:40\n\n  725 },\n  726 \n  727 site: async (parent: any, _args: any, context: Context) => {\nâ†’ 728   return await context.prisma.site.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"site.findUnique","timestamp":"2025-07-06T17:28:06.308Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.waypoint.findMany()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:740:44\n\n  737 },\n  738 \n  739 waypoints: async (parent: any, _args: any, context: Context) => {\nâ†’ 740   return await context.prisma.waypoint.findMany(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"waypoint.findMany","timestamp":"2025-07-06T17:28:06.312Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.drone.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:722:41\n\n  719 },\n  720 \n  721 drone: async (parent: any, _args: any, context: Context) => {\nâ†’ 722   return await context.prisma.drone.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"drone.findUnique","timestamp":"2025-07-06T17:28:06.313Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.drone.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:722:41\n\n  719 },\n  720 \n  721 drone: async (parent: any, _args: any, context: Context) => {\nâ†’ 722   return await context.prisma.drone.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"drone.findUnique","timestamp":"2025-07-06T17:28:06.316Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.drone.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:722:41\n\n  719 },\n  720 \n  721 drone: async (parent: any, _args: any, context: Context) => {\nâ†’ 722   return await context.prisma.drone.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"drone.findUnique","timestamp":"2025-07-06T17:28:06.319Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.waypoint.findMany()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:740:44\n\n  737 },\n  738 \n  739 waypoints: async (parent: any, _args: any, context: Context) => {\nâ†’ 740   return await context.prisma.waypoint.findMany(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"waypoint.findMany","timestamp":"2025-07-06T17:28:06.321Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:709:40\n\n  706 \n  707 Mission: {\n  708   createdBy: async (parent: any, _args: any, context: Context) => {\nâ†’ 709     return await context.prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"user.findUnique","timestamp":"2025-07-06T17:28:06.324Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:716:40\n\n  713 \n  714 assignedTo: async (parent: any, _args: any, context: Context) => {\n  715   if (!parent.assignedToId) return null;\nâ†’ 716   return await context.prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"user.findUnique","timestamp":"2025-07-06T17:28:06.325Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:709:40\n\n  706 \n  707 Mission: {\n  708   createdBy: async (parent: any, _args: any, context: Context) => {\nâ†’ 709     return await context.prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"user.findUnique","timestamp":"2025-07-06T17:28:06.326Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:716:40\n\n  713 \n  714 assignedTo: async (parent: any, _args: any, context: Context) => {\n  715   if (!parent.assignedToId) return null;\nâ†’ 716   return await context.prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"user.findUnique","timestamp":"2025-07-06T17:28:06.327Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:709:40\n\n  706 \n  707 Mission: {\n  708   createdBy: async (parent: any, _args: any, context: Context) => {\nâ†’ 709     return await context.prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"user.findUnique","timestamp":"2025-07-06T17:28:06.330Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:716:40\n\n  713 \n  714 assignedTo: async (parent: any, _args: any, context: Context) => {\n  715   if (!parent.assignedToId) return null;\nâ†’ 716   return await context.prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"user.findUnique","timestamp":"2025-07-06T17:28:06.332Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.site.findMany()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\site\\index.ts:13:40\n\n  10 requireAuth(context);\n  11 requireOrganizationAccess(context, organizationId);\n  12 \nâ†’ 13 return await context.prisma.site.findMany(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"site.findMany","timestamp":"2025-07-06T17:28:06.951Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T17:35:35.097Z"}
{"level":"info","message":"User logged in: admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T17:36:21.470Z"}
{"clientVersion":"6.11.1","code":"P1001","level":"error","message":"Authentication error: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","meta":{"database_host":"ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech","database_port":5432,"modelName":"User"},"name":"PrismaClientKnownRequestError","service":"drone-management-api","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:36\n\n  28 const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JWTPayload;\n  29 \n  30 // Fetch user with organization memberships\nâ†’ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.\n    at Xn.handleRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)\n    at authMiddleware (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\middleware\\auth.ts:31:18)","timestamp":"2025-07-06T17:37:00.200Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.site.findMany()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\site\\index.ts:13:40\n\n  10 requireAuth(context);\n  11 requireOrganizationAccess(context, organizationId);\n  12 \nâ†’ 13 return await context.prisma.site.findMany(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"site.findMany","timestamp":"2025-07-06T17:37:07.808Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.waypoint.findMany()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:740:44\n\n  737 },\n  738 \n  739 waypoints: async (parent: any, _args: any, context: Context) => {\nâ†’ 740   return await context.prisma.waypoint.findMany(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"waypoint.findMany","timestamp":"2025-07-06T17:37:14.209Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.site.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:728:40\n\n  725 },\n  726 \n  727 site: async (parent: any, _args: any, context: Context) => {\nâ†’ 728   return await context.prisma.site.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"site.findUnique","timestamp":"2025-07-06T17:37:14.217Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.site.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:728:40\n\n  725 },\n  726 \n  727 site: async (parent: any, _args: any, context: Context) => {\nâ†’ 728   return await context.prisma.site.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"site.findUnique","timestamp":"2025-07-06T17:37:14.219Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.site.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:728:40\n\n  725 },\n  726 \n  727 site: async (parent: any, _args: any, context: Context) => {\nâ†’ 728   return await context.prisma.site.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"site.findUnique","timestamp":"2025-07-06T17:37:14.221Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.drone.findMany()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\drone\\index.ts:28:49\n\n  25   return cached;\n  26 }\n  27 \nâ†’ 28 const drones = await context.prisma.drone.findMany(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"drone.findMany","timestamp":"2025-07-06T17:37:14.231Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:709:40\n\n  706 \n  707 Mission: {\n  708   createdBy: async (parent: any, _args: any, context: Context) => {\nâ†’ 709     return await context.prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"user.findUnique","timestamp":"2025-07-06T17:37:14.236Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:716:40\n\n  713 \n  714 assignedTo: async (parent: any, _args: any, context: Context) => {\n  715   if (!parent.assignedToId) return null;\nâ†’ 716   return await context.prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"user.findUnique","timestamp":"2025-07-06T17:37:14.237Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:709:40\n\n  706 \n  707 Mission: {\n  708   createdBy: async (parent: any, _args: any, context: Context) => {\nâ†’ 709     return await context.prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"user.findUnique","timestamp":"2025-07-06T17:37:14.238Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:716:40\n\n  713 \n  714 assignedTo: async (parent: any, _args: any, context: Context) => {\n  715   if (!parent.assignedToId) return null;\nâ†’ 716   return await context.prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"user.findUnique","timestamp":"2025-07-06T17:37:14.240Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:709:40\n\n  706 \n  707 Mission: {\n  708   createdBy: async (parent: any, _args: any, context: Context) => {\nâ†’ 709     return await context.prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"user.findUnique","timestamp":"2025-07-06T17:37:14.242Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.user.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:716:40\n\n  713 \n  714 assignedTo: async (parent: any, _args: any, context: Context) => {\n  715   if (!parent.assignedToId) return null;\nâ†’ 716   return await context.prisma.user.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"user.findUnique","timestamp":"2025-07-06T17:37:14.244Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.drone.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:722:41\n\n  719 },\n  720 \n  721 drone: async (parent: any, _args: any, context: Context) => {\nâ†’ 722   return await context.prisma.drone.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"drone.findUnique","timestamp":"2025-07-06T17:37:14.249Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.drone.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:722:41\n\n  719 },\n  720 \n  721 drone: async (parent: any, _args: any, context: Context) => {\nâ†’ 722   return await context.prisma.drone.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"drone.findUnique","timestamp":"2025-07-06T17:37:14.253Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.drone.findUnique()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:722:41\n\n  719 },\n  720 \n  721 drone: async (parent: any, _args: any, context: Context) => {\nâ†’ 722   return await context.prisma.drone.findUnique(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"drone.findUnique","timestamp":"2025-07-06T17:37:14.255Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.waypoint.findMany()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:740:44\n\n  737 },\n  738 \n  739 waypoints: async (parent: any, _args: any, context: Context) => {\nâ†’ 740   return await context.prisma.waypoint.findMany(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"waypoint.findMany","timestamp":"2025-07-06T17:37:14.257Z"}
{"level":"error","message":"Database error: \nInvalid `context.prisma.waypoint.findMany()` invocation in\nD:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\missions\\mission.ts:740:44\n\n  737 },\n  738 \n  739 waypoints: async (parent: any, _args: any, context: Context) => {\nâ†’ 740   return await context.prisma.waypoint.findMany(\nCan't reach database server at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-blue-fire-ae6r0ere-pooler.c-2.us-east-2.aws.neon.tech:5432`.","service":"drone-management-api","target":"waypoint.findMany","timestamp":"2025-07-06T17:37:14.261Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T18:06:15.470Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T18:06:19.863Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T18:06:19.864Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T18:06:19.864Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T18:06:20.286Z"}
{"level":"info","message":"Redis is ready","service":"drone-management-api","timestamp":"2025-07-06T18:06:21.045Z"}
{"level":"info","message":"Redis connection test successful","service":"drone-management-api","timestamp":"2025-07-06T18:06:21.461Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T18:06:21.552Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T18:06:21.553Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T18:11:44.304Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T19:07:57.588Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T19:08:03.125Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T19:08:03.126Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T19:08:03.126Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T19:08:03.716Z"}
{"level":"info","message":"Redis is ready","service":"drone-management-api","timestamp":"2025-07-06T19:08:04.399Z"}
{"level":"info","message":"Redis connection test successful","service":"drone-management-api","timestamp":"2025-07-06T19:08:04.728Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T19:08:05.539Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T19:08:05.540Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T19:13:24.035Z"}
{"level":"info","message":"User logged in: admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T19:16:14.345Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T19:29:47.357Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T19:29:53.010Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T19:29:53.011Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T19:29:53.012Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T19:29:54.408Z"}
{"level":"info","message":"Redis is ready","service":"drone-management-api","timestamp":"2025-07-06T19:29:55.065Z"}
{"level":"info","message":"Redis connection test successful","service":"drone-management-api","timestamp":"2025-07-06T19:29:55.457Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T19:29:57.283Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T19:29:57.284Z"}
{"level":"info","message":"User logged in: admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T19:44:16.726Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T20:01:54.339Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T20:01:54.372Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T20:01:54.372Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T20:01:54.373Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T20:01:54.373Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T20:01:54.374Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T20:01:54.374Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T20:01:54.375Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T20:01:54.376Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T20:01:54.376Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T20:12:19.236Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T20:12:23.719Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T20:12:23.720Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T20:12:23.721Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T20:12:24.236Z"}
{"level":"info","message":"Redis is ready","service":"drone-management-api","timestamp":"2025-07-06T20:12:24.840Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T20:12:25.907Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T20:12:29.856Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T20:12:29.858Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T20:12:29.859Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T20:12:30.174Z"}
{"level":"info","message":"Redis is ready","service":"drone-management-api","timestamp":"2025-07-06T20:12:30.779Z"}
{"level":"info","message":"Redis connection test successful","service":"drone-management-api","timestamp":"2025-07-06T20:12:31.084Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T20:12:31.223Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T20:12:31.224Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T20:12:44.518Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T20:12:46.507Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T20:12:50.236Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T20:12:50.237Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T20:12:50.238Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T20:12:50.649Z"}
{"level":"info","message":"Redis is ready","service":"drone-management-api","timestamp":"2025-07-06T20:12:51.262Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T20:12:57.191Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T20:13:01.006Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T20:13:01.008Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T20:13:01.009Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T20:13:01.310Z"}
{"level":"info","message":"Redis is ready","service":"drone-management-api","timestamp":"2025-07-06T20:13:01.909Z"}
{"level":"info","message":"Redis connection test successful","service":"drone-management-api","timestamp":"2025-07-06T20:13:02.215Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T20:13:02.334Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T20:13:02.335Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T20:13:22.686Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T20:13:25.853Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T20:13:25.854Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T20:13:25.855Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T20:13:26.185Z"}
{"level":"info","message":"Redis is ready","service":"drone-management-api","timestamp":"2025-07-06T20:13:26.690Z"}
{"level":"info","message":"Redis connection test successful","service":"drone-management-api","timestamp":"2025-07-06T20:13:26.994Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T20:13:27.114Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T20:13:27.115Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T20:13:37.189Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T20:13:40.922Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T20:13:40.923Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T20:13:40.924Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T20:13:41.239Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T20:13:42.637Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T20:13:46.048Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T20:13:46.055Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T20:13:46.056Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T20:13:46.663Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T20:13:47.831Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T20:13:51.980Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T20:13:51.981Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T20:13:51.982Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T20:13:52.293Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T20:13:53.607Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T20:13:57.615Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T20:13:57.616Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T20:13:57.617Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T20:13:57.927Z"}
{"level":"info","message":"Redis is ready","service":"drone-management-api","timestamp":"2025-07-06T20:13:58.538Z"}
{"level":"info","message":"Redis connection test successful","service":"drone-management-api","timestamp":"2025-07-06T20:13:58.842Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T20:13:58.934Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T20:13:58.935Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T20:14:32.669Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T20:14:34.017Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T20:14:37.756Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T20:14:37.758Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T20:14:37.759Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T20:14:38.172Z"}
{"level":"info","message":"Redis is ready","service":"drone-management-api","timestamp":"2025-07-06T20:14:38.680Z"}
{"level":"info","message":"Redis connection test successful","service":"drone-management-api","timestamp":"2025-07-06T20:14:38.983Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T20:14:39.080Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T20:14:39.081Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T20:14:46.587Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T20:14:53.714Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T20:14:55.437Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T20:14:57.411Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T20:15:00.898Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T20:15:00.899Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T20:15:00.900Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T20:15:01.315Z"}
{"level":"info","message":"Redis is ready","service":"drone-management-api","timestamp":"2025-07-06T20:15:01.926Z"}
{"level":"info","message":"Redis connection test successful","service":"drone-management-api","timestamp":"2025-07-06T20:15:02.237Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T20:15:02.446Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T20:15:02.447Z"}
{"extensions":{},"level":"error","message":"Create drone error: Invalid drone input: Invalid sensor types","service":"drone-management-api","stack":"GraphQLError: Invalid drone input: Invalid sensor types\n    at Object.createDrone (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\drone\\index.ts:151:17)\n    at field.resolve (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@apollo\\server\\src\\utils\\schemaInstrumentation.ts:82:22)\n    at executeField (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\execution\\execute.js:500:20)\n    at D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\execution\\execute.js:385:22\n    at promiseReduce (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\jsutils\\promiseReduce.js:23:9)\n    at executeFieldsSerially (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\execution\\execute.js:381:43)\n    at executeOperation (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\execution\\execute.js:355:14)\n    at execute (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\execution\\execute.js:136:20)\n    at executeIncrementally (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@apollo\\server\\src\\incrementalDeliveryPolyfill.ts:114:17)\n    at execute (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@apollo\\server\\src\\requestPipeline.ts:550:31)","timestamp":"2025-07-06T20:15:10.261Z"}
{"extensions":{},"level":"error","message":"Create drone error: Invalid drone input: Invalid sensor types","service":"drone-management-api","stack":"GraphQLError: Invalid drone input: Invalid sensor types\n    at Object.createDrone (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\drone\\index.ts:151:17)\n    at field.resolve (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@apollo\\server\\src\\utils\\schemaInstrumentation.ts:82:22)\n    at executeField (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\execution\\execute.js:500:20)\n    at D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\execution\\execute.js:385:22\n    at promiseReduce (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\jsutils\\promiseReduce.js:23:9)\n    at executeFieldsSerially (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\execution\\execute.js:381:43)\n    at executeOperation (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\execution\\execute.js:355:14)\n    at execute (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\execution\\execute.js:136:20)\n    at executeIncrementally (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@apollo\\server\\src\\incrementalDeliveryPolyfill.ts:114:17)\n    at execute (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@apollo\\server\\src\\requestPipeline.ts:550:31)","timestamp":"2025-07-06T20:16:15.651Z"}
{"extensions":{},"level":"error","message":"Create drone error: Invalid drone input: Invalid sensor types","service":"drone-management-api","stack":"GraphQLError: Invalid drone input: Invalid sensor types\n    at Object.createDrone (D:\\Refreshed\\Drone-Management_system\\falcon\\src\\graphql\\resolvers\\drone\\index.ts:151:17)\n    at field.resolve (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@apollo\\server\\src\\utils\\schemaInstrumentation.ts:82:22)\n    at executeField (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\execution\\execute.js:500:20)\n    at D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\execution\\execute.js:385:22\n    at promiseReduce (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\jsutils\\promiseReduce.js:23:9)\n    at executeFieldsSerially (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\execution\\execute.js:381:43)\n    at executeOperation (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\execution\\execute.js:355:14)\n    at execute (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\graphql\\execution\\execute.js:136:20)\n    at executeIncrementally (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@apollo\\server\\src\\incrementalDeliveryPolyfill.ts:114:17)\n    at execute (D:\\Refreshed\\Drone-Management_system\\falcon\\node_modules\\@apollo\\server\\src\\requestPipeline.ts:550:31)","timestamp":"2025-07-06T20:16:35.621Z"}
{"level":"error","message":"Database error: Error in PostgreSQL connection: Error { kind: Closed, cause: None }","service":"drone-management-api","target":"quaint::connector::postgres::native","timestamp":"2025-07-06T20:21:56.140Z"}
{"level":"info","message":"User logged in: admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T20:29:58.910Z"}
{"level":"info","message":"Drone created: AVH RETRO 1 by admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T20:33:24.987Z"}
{"level":"info","message":"User logged in: admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T20:40:50.646Z"}
{"level":"info","message":"User logged in: admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T20:51:47.793Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T21:04:18.044Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T21:04:21.169Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T21:04:21.170Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T21:04:21.171Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T21:04:21.512Z"}
{"level":"info","message":"Redis is ready","service":"drone-management-api","timestamp":"2025-07-06T21:04:22.027Z"}
{"level":"info","message":"Redis connection test successful","service":"drone-management-api","timestamp":"2025-07-06T21:04:22.312Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T21:04:22.400Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T21:04:22.401Z"}
{"level":"info","message":"Connecting to database...","service":"drone-management-api","timestamp":"2025-07-06T21:04:24.265Z"}
{"level":"info","message":"Database connected successfully","service":"drone-management-api","timestamp":"2025-07-06T21:04:27.343Z"}
{"level":"info","message":"Initializing Redis connection...","service":"drone-management-api","timestamp":"2025-07-06T21:04:27.344Z"}
{"level":"info","message":"Connecting to Upstash Redis: massive-dog-55605.upstash.io","service":"drone-management-api","timestamp":"2025-07-06T21:04:27.345Z"}
{"level":"info","message":"Redis connected","service":"drone-management-api","timestamp":"2025-07-06T21:04:27.502Z"}
{"level":"info","message":"Redis is ready","service":"drone-management-api","timestamp":"2025-07-06T21:04:27.999Z"}
{"level":"info","message":"Redis connection test successful","service":"drone-management-api","timestamp":"2025-07-06T21:04:28.272Z"}
{"level":"info","message":"ðŸš€ Server ready at http://localhost:4000/graphql","service":"drone-management-api","timestamp":"2025-07-06T21:04:28.324Z"}
{"level":"info","message":"ðŸ“Š GraphQL Playground available in development mode","service":"drone-management-api","timestamp":"2025-07-06T21:04:28.325Z"}
{"level":"info","message":"Mission updated: cmcq4t6vf001aujt4eqils414 by admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T21:04:41.008Z"}
{"level":"info","message":"Mission updated: cmcq4t6vf001aujt4eqils414 by admin@falcon.com","service":"drone-management-api","timestamp":"2025-07-06T21:08:52.927Z"}
